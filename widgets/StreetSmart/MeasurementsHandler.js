function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}define(['dojo/_base/Color','dojo/on','dojo/_base/array','esri/geometry/Point','esri/geometry/Polygon','esri/geometry/ScreenPoint','esri/graphic','esri/symbols/SimpleMarkerSymbol','esri/symbols/SimpleLineSymbol','esri/symbols/SimpleFillSymbol','esri/renderers/SimpleRenderer','esri/layers/GraphicsLayer','esri/SpatialReference','esri/symbols/TextSymbol','esri/geometry/Polyline','./utils'],function(Color,on,dojoArray,Point,Polygon,ScreenPoint,Graphic,SimpleMarkerSymbol,SimpleLineSymbol,SimpleFillSymbol,SimpleRenderer,GraphicsLayer,SpatialReference,TextSymbol,Polyline,utils){return function(){function MeasurementsHandler(_ref){var map=_ref.map,wkid=_ref.wkid,measureChange=_ref.measureChange,layerManager=_ref.layerManager,StreetSmartApi=_ref.StreetSmartApi;_classCallCheck(this,MeasurementsHandler);this.map=map;this.wkid=wkid;this.measureChange=measureChange;this.layerManager=layerManager;this.StreetSmartApi=StreetSmartApi}MeasurementsHandler.prototype.draw=function draw(measurementEvent){if(measurementEvent&&measurementEvent.detail){var _measurementEvent$det=measurementEvent.detail,activeMeasurement=_measurementEvent$det.activeMeasurement,panoramaViewer=_measurementEvent$det.panoramaViewer;if(activeMeasurement){if(activeMeasurement.features[0].geometry.type==='Point'){var measurementCoordinates=activeMeasurement.features[0].geometry.coordinates;this.drawPoint(measurementCoordinates)}if(activeMeasurement.features[0].geometry.type==='LineString'){var _measurementCoordinates=activeMeasurement.features[0].geometry.coordinates;var coordinatesLength=_measurementCoordinates.length;this.drawLineString(_measurementCoordinates,coordinatesLength,activeMeasurement)}if(activeMeasurement.features[0].geometry.type==='Polygon'){this.drawPolygon(activeMeasurement)}}else if(!activeMeasurement){this.map.graphics.clear()}}};MeasurementsHandler.prototype.drawPoint=function drawPoint(measurementCoordinates){if(measurementCoordinates!==null){var pointX=measurementCoordinates[0];var pointY=measurementCoordinates[1];var pt=new Point(pointX,pointY,new SpatialReference({wkid:this.wkid}));var ptMap=utils.transformProj4js(pt,this.map.spatialReference.wkid);var measureGraphics=[];var geom=new Point(ptMap.x,ptMap.y,new SpatialReference({wkid:102100}));var symbol=null;var measureNumber=new TextSymbol;measureNumber.setText(1);measureNumber.setVerticalAlignment('top');measureNumber.setHorizontalAlignment('right');var measureGraphic=Graphic(geom,symbol,null);measureGraphics.push(measureGraphic);this.map.graphics.clear();this.layerManager.measureLayer.add(measureGraphics);this.map.graphics.add(new Graphic(geom,measureNumber))}};MeasurementsHandler.prototype.drawLineString=function drawLineString(measurementCoordinates,coordinatesLength,activeMeasurement){var measureLinePoints=[];var self=this;dojoArray.forEach(measurementCoordinates,function(measureCoordinates,i){var pointX=measureCoordinates[0];var pointY=measureCoordinates[1];var pt=new Point(pointX,pointY,new SpatialReference({wkid:self.wkid}));var ptMap=utils.transformProj4js(pt,self.map.spatialReference.wkid);var measureGraphics=[];var geom=new Point(ptMap.x,ptMap.y,new SpatialReference({wkid:102100}));var symbol=null;var measureNumber=new TextSymbol;measureNumber.setText(i+1);measureNumber.setVerticalAlignment('top');measureNumber.setHorizontalAlignment('right');var measureGraphic=Graphic(geom,symbol,null);measureGraphics.push(measureGraphic);self.layerManager.measureLayer.add(measureGraphics);self.map.graphics.add(new Graphic(geom,measureNumber));if(coordinatesLength>1){var linePoints=[ptMap.x,ptMap.y];measureLinePoints.push(linePoints)}});if(coordinatesLength>1){var polyJson={'paths':[measureLinePoints],'spatialReference':{wkid:102100}};var measureLines=new Polyline(polyJson);var symbol=new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,new Color([26,26,26,1]),2);self.map.graphics.add(new Graphic(measureLines,symbol));var x1=(measureLinePoints[coordinatesLength-2][0]+measureLinePoints[coordinatesLength-1][0])/2;var y1=(measureLinePoints[coordinatesLength-2][1]+measureLinePoints[coordinatesLength-1][1])/2;var lineLabelPoint=new Point(x1,y1,new SpatialReference({wkid:102100}));var lengthValue=activeMeasurement.features[0].properties.derivedData.segmentLengths.value;var value=parseFloat(lengthValue[lengthValue.length-1]).toFixed(2)+activeMeasurement.features[0].properties.derivedData.unit;var measureValue=new TextSymbol(value);measureValue.setVerticalAlignment('middle');measureValue.setHorizontalAlignment('right');self.map.graphics.add(new Graphic(lineLabelPoint,measureValue))}};MeasurementsHandler.prototype.drawPolygon=function drawPolygon(activeMeasurement){var surfacePoints=[];var self=this;var surfaceMeasurePoints=activeMeasurement.features[0].geometry.coordinates[0];var surfaceMeasureLength=surfaceMeasurePoints.length;if(surfaceMeasureLength>0){for(var i=1;i<surfaceMeasureLength;i++){var surfaceX=surfaceMeasurePoints[i][0];var surfaceY=surfaceMeasurePoints[i][1];var surfacePt=new Point(surfaceX,surfaceY,new SpatialReference({wkid:self.wkid}));var surfacePtMap=utils.transformProj4js(surfacePt,self.map.spatialReference.wkid);var surfaceGraphics=[];var surfaceGeom=new Point(surfacePtMap.x,surfacePtMap.y,new SpatialReference({wkid:102100}));var surfaceSymbol=null;var surfaceMeasureNumber=new TextSymbol;surfaceMeasureNumber.setText(i);surfaceMeasureNumber.setVerticalAlignment('top');surfaceMeasureNumber.setHorizontalAlignment('right');var surfaceMeasureGraphic=Graphic(surfaceGeom,surfaceSymbol,null);surfaceGraphics.push(surfaceMeasureGraphic);self.layerManager.measureLayer.add(surfaceGraphics);self.map.graphics.add(new Graphic(surfaceGeom,surfaceMeasureNumber));if(surfaceMeasureLength>1){var polyPoints=[surfacePtMap.x,surfacePtMap.y];surfacePoints.push(polyPoints)}}if(surfaceMeasureLength>2){var polyJson={'rings':[surfacePoints],'spatialReference':{wkid:102100}};var surfaceMeasureLines=new Polygon(polyJson);var polySymbol=new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,new Color([26,26,26,1]),2);self.map.graphics.add(new Graphic(surfaceMeasureLines,polySymbol));var x1=(surfacePoints[surfaceMeasureLength-3][0]+surfacePoints[surfaceMeasureLength-2][0])/2;var y1=(surfacePoints[surfaceMeasureLength-3][1]+surfacePoints[surfaceMeasureLength-2][1])/2;var lineLabelPoint=new Point(x1,y1,new SpatialReference({wkid:102100}));var value=parseFloat(activeMeasurement.features[0].properties.derivedData.segmentLengths.value[surfaceMeasureLength-3]).toFixed(2)+activeMeasurement.features[0].properties.derivedData.unit;var measureValue=new TextSymbol(value);measureValue.setVerticalAlignment('middle');measureValue.setHorizontalAlignment('right');self.map.graphics.add(new Graphic(lineLabelPoint,measureValue))}}};return MeasurementsHandler}()});